android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.ab:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.ac:
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.ad:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.ae:
    java.lang.CharSequence mBigText -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.af:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> a
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> c
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> a
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> a
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> a
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> a
    void setFlag(int,boolean) -> a
    android.app.Notification build() -> a
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.ag:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.ah:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.ai:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.aj:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.ak:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.al:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.am:
    java.lang.CharSequence mBigContentTitle -> d
    java.lang.CharSequence mSummaryText -> e
    boolean mSummaryTextSet -> f
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.an:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.ao:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.ap:
    android.app.Notification$Builder b -> a
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.app.Notification build() -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.aq:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.GravityCompat -> android.support.v4.view.a:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.b:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.c:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.d:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.e:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.f:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.g:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.h:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.i:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.j:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.k:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.l:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.m:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.n:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.o:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.p:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.q:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.r:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.s:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.t:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.u:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.v:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.w:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.x:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.y:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.z:
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.aa:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ab:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ac:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ad:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ae:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.af:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ag:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ah:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ai:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aj:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ak:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.al:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.am:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.an:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ao:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ap:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.aq:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ar:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.as:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.at:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.au:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.av:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.aw:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewGravity(android.view.View) -> e
    boolean checkDrawerViewGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.sina.weibo.sdk.ApiUtils -> com.sina.weibo.sdk.a:
    java.lang.String TAG -> a
    boolean validateWeiboSign(android.content.Context,java.lang.String) -> a
    boolean containSign(android.content.pm.Signature[],java.lang.String) -> a
com.sina.weibo.sdk.WeiboAppManager -> com.sina.weibo.sdk.b:
    java.lang.String TAG -> a
    android.net.Uri WEIBO_NAME_URI -> b
    com.sina.weibo.sdk.WeiboAppManager sInstance -> c
    android.content.Context mContext -> d
    com.sina.weibo.sdk.WeiboAppManager getInstance(android.content.Context) -> a
    com.sina.weibo.sdk.WeiboAppManager$WeiboInfo getWeiboInfo() -> a
    com.sina.weibo.sdk.WeiboAppManager$WeiboInfo queryWeiboInfoInternal(android.content.Context) -> b
    com.sina.weibo.sdk.WeiboAppManager$WeiboInfo queryWeiboInfoByProvider(android.content.Context) -> c
    com.sina.weibo.sdk.WeiboAppManager$WeiboInfo queryWeiboInfoByAsset(android.content.Context) -> d
    com.sina.weibo.sdk.WeiboAppManager$WeiboInfo parseWeiboInfoByAsset(java.lang.String) -> a
com.sina.weibo.sdk.WeiboAppManager$WeiboInfo -> com.sina.weibo.sdk.c:
    java.lang.String mPackageName -> a
    int mSupportApi -> b
    void setPackageName(java.lang.String) -> a
    java.lang.String getPackageName() -> a
    void setSupportApi(int) -> a
    int getSupportApi() -> b
    boolean isLegal() -> c
    java.lang.String toString() -> toString
    void access$0(com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,java.lang.String) -> a
    void access$1(com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,int) -> a
com.sina.weibo.sdk.api.BaseMediaObject -> com.sina.weibo.sdk.api.BaseMediaObject:
    java.lang.String actionUrl -> a
    java.lang.String schema -> b
    java.lang.String identify -> c
    java.lang.String title -> d
    java.lang.String description -> e
    byte[] thumbData -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.CmdObject -> com.sina.weibo.sdk.api.CmdObject:
    java.lang.String cmd -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.CmdObject$1 -> com.sina.weibo.sdk.api.a:
    com.sina.weibo.sdk.api.CmdObject createFromParcel(android.os.Parcel) -> a
    com.sina.weibo.sdk.api.CmdObject[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.ImageObject -> com.sina.weibo.sdk.api.ImageObject:
    byte[] imageData -> g
    java.lang.String imagePath -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.ImageObject$1 -> com.sina.weibo.sdk.api.b:
    com.sina.weibo.sdk.api.ImageObject createFromParcel(android.os.Parcel) -> a
    com.sina.weibo.sdk.api.ImageObject[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.MusicObject -> com.sina.weibo.sdk.api.MusicObject:
    java.lang.String defaultText -> g
    java.lang.String h5Url -> h
    java.lang.String dataUrl -> i
    java.lang.String dataHdUrl -> j
    int duration -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.MusicObject$1 -> com.sina.weibo.sdk.api.c:
    com.sina.weibo.sdk.api.MusicObject createFromParcel(android.os.Parcel) -> a
    com.sina.weibo.sdk.api.MusicObject[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.TextObject -> com.sina.weibo.sdk.api.TextObject:
    java.lang.String text -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.TextObject$1 -> com.sina.weibo.sdk.api.d:
    com.sina.weibo.sdk.api.TextObject createFromParcel(android.os.Parcel) -> a
    com.sina.weibo.sdk.api.TextObject[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.VideoObject -> com.sina.weibo.sdk.api.VideoObject:
    java.lang.String defaultText -> g
    java.lang.String h5Url -> h
    java.lang.String dataUrl -> i
    java.lang.String dataHdUrl -> j
    int duration -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.VideoObject$1 -> com.sina.weibo.sdk.api.e:
    com.sina.weibo.sdk.api.VideoObject createFromParcel(android.os.Parcel) -> a
    com.sina.weibo.sdk.api.VideoObject[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.VoiceObject -> com.sina.weibo.sdk.api.VoiceObject:
    java.lang.String defaultText -> g
    java.lang.String h5Url -> h
    java.lang.String dataUrl -> i
    java.lang.String dataHdUrl -> j
    int duration -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.VoiceObject$1 -> com.sina.weibo.sdk.api.f:
    com.sina.weibo.sdk.api.VoiceObject createFromParcel(android.os.Parcel) -> a
    com.sina.weibo.sdk.api.VoiceObject[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.WebpageObject -> com.sina.weibo.sdk.api.WebpageObject:
    java.lang.String defaultText -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.WebpageObject$1 -> com.sina.weibo.sdk.api.g:
    com.sina.weibo.sdk.api.WebpageObject createFromParcel(android.os.Parcel) -> a
    com.sina.weibo.sdk.api.WebpageObject[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.WeiboMultiMessage -> com.sina.weibo.sdk.api.h:
    com.sina.weibo.sdk.api.TextObject textObject -> a
    com.sina.weibo.sdk.api.ImageObject imageObject -> b
    com.sina.weibo.sdk.api.BaseMediaObject mediaObject -> c
    android.os.Bundle toBundle(android.os.Bundle) -> a
    boolean checkArgs() -> a
com.sina.weibo.sdk.api.share.Base -> com.sina.weibo.sdk.api.a.a:
    java.lang.String transaction -> a
    int getType() -> a
com.sina.weibo.sdk.api.share.BaseRequest -> com.sina.weibo.sdk.api.a.b:
    void toBundle(android.os.Bundle) -> a
    boolean check(android.content.Context,com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.BaseResponse -> com.sina.weibo.sdk.api.a.c:
    int errCode -> b
    java.lang.String errMsg -> c
    java.lang.String reqPackageName -> d
    void fromBundle(android.os.Bundle) -> a
com.sina.weibo.sdk.api.share.IWeiboDownloadListener -> com.sina.weibo.sdk.api.a.d:
    void onCancel() -> a
com.sina.weibo.sdk.api.share.IWeiboHandler -> com.sina.weibo.sdk.api.a.e:
com.sina.weibo.sdk.api.share.IWeiboHandler$Response -> com.sina.weibo.sdk.api.a.f:
    void onResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> a
com.sina.weibo.sdk.api.share.IWeiboShareAPI -> com.sina.weibo.sdk.api.a.g:
    boolean isWeiboAppInstalled() -> a
    boolean registerApp() -> b
    boolean handleWeiboResponse(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Response) -> a
    boolean sendRequest(android.app.Activity,com.sina.weibo.sdk.api.share.BaseRequest) -> a
com.sina.weibo.sdk.api.share.SendMessageToWeiboResponse -> com.sina.weibo.sdk.api.a.h:
    int getType() -> a
com.sina.weibo.sdk.api.share.SendMultiMessageToWeiboRequest -> com.sina.weibo.sdk.api.a.i:
    com.sina.weibo.sdk.api.WeiboMultiMessage multiMessage -> b
    int getType() -> a
    void toBundle(android.os.Bundle) -> a
    boolean check(android.content.Context,com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.VersionCheckHandler -> com.sina.weibo.sdk.api.a.j:
    java.lang.String TAG -> a
    boolean checkRequest(android.content.Context,com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,com.sina.weibo.sdk.api.WeiboMultiMessage) -> a
com.sina.weibo.sdk.api.share.WeiboDownloader -> com.sina.weibo.sdk.api.a.k:
    android.app.Dialog createDownloadConfirmDialog(android.content.Context,com.sina.weibo.sdk.api.share.IWeiboDownloadListener) -> a
    void downloadWeibo(android.content.Context) -> b
    void access$0(android.content.Context) -> a
com.sina.weibo.sdk.api.share.WeiboDownloader$1 -> com.sina.weibo.sdk.api.a.l:
    android.content.Context val$context -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sina.weibo.sdk.api.share.WeiboDownloader$2 -> com.sina.weibo.sdk.api.a.m:
    com.sina.weibo.sdk.api.share.IWeiboDownloadListener val$listener -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sina.weibo.sdk.api.share.WeiboShareAPIImpl -> com.sina.weibo.sdk.api.a.n:
    java.lang.String TAG -> a
    android.content.Context mContext -> b
    java.lang.String mAppKey -> c
    com.sina.weibo.sdk.WeiboAppManager$WeiboInfo mWeiboInfo -> d
    boolean mNeedDownloadWeibo -> e
    com.sina.weibo.sdk.api.share.IWeiboDownloadListener mDownloadListener -> f
    android.app.Dialog mDownloadConfirmDialog -> g
    int getWeiboAppSupportAPI() -> c
    boolean isWeiboAppInstalled() -> a
    boolean isWeiboAppSupportAPI() -> d
    boolean registerApp() -> b
    boolean handleWeiboResponse(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Response) -> a
    boolean sendRequest(android.app.Activity,com.sina.weibo.sdk.api.share.BaseRequest) -> a
    boolean checkEnvironment(boolean) -> a
    boolean launchWeiboActivity(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle,java.lang.String) -> a
    void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> a
    void addEventLog(android.content.Context,java.lang.String,java.lang.String) -> a
com.sina.weibo.sdk.api.share.WeiboShareSDK -> com.sina.weibo.sdk.api.a.o:
    com.sina.weibo.sdk.api.share.IWeiboShareAPI createWeiboAPI(android.content.Context,java.lang.String,boolean) -> a
    com.sina.weibo.sdk.api.share.IWeiboShareAPI createWeiboAPI(android.content.Context,java.lang.String) -> a
com.sina.weibo.sdk.cmd.AppInstallCmd -> com.sina.weibo.sdk.a.a:
    long appVersion -> a
    java.util.List appPackages -> b
    java.lang.String appSign -> c
    java.lang.String downloadUrl -> d
    void initFromJsonObj(org.json.JSONObject) -> a
    long getAppVersion() -> a
    java.util.List getAppPackage() -> b
    java.lang.String getAppSign() -> c
    java.lang.String getDownloadUrl() -> d
com.sina.weibo.sdk.cmd.AppInstallCmdExecutor -> com.sina.weibo.sdk.a.b:
    java.lang.String WB_APK_FILE_DIR -> a
    java.lang.String TAG -> b
    android.content.Context mContext -> c
    android.os.HandlerThread thread -> d
    android.os.Looper mLooper -> e
    com.sina.weibo.sdk.cmd.AppInstallCmdExecutor$InstallHandler mHandler -> f
    boolean isStarted -> g
    void handleCmd(com.sina.weibo.sdk.cmd.AppInstallCmd) -> b
    boolean needActivate(android.content.Context,com.sina.weibo.sdk.cmd.AppInstallCmd) -> a
    boolean checkApkInstalled(android.content.Context,java.lang.String) -> a
    void start() -> a
    void stop() -> b
    boolean doExecutor(com.sina.weibo.sdk.cmd.AppInstallCmd) -> a
    android.util.Pair walkDir(android.content.Context,java.lang.String,com.sina.weibo.sdk.cmd.AppInstallCmd) -> a
    boolean isSpecifiedApk(android.content.pm.PackageInfo,java.util.List,java.lang.String) -> a
    boolean checkPackageName(android.content.pm.PackageInfo,java.lang.String) -> a
    boolean checkApkSign(android.content.pm.PackageInfo,java.lang.String) -> b
    java.lang.String generateSaveFileName(java.lang.String) -> a
    void showNotification(android.content.Context,com.sina.weibo.sdk.cmd.AppInstallCmd,java.lang.String) -> a
    android.app.PendingIntent buildInstallApkIntent(android.content.Context,java.lang.String) -> b
    java.lang.String getNotificationTitle(android.content.Context,java.lang.String) -> c
    void access$1(com.sina.weibo.sdk.cmd.AppInstallCmdExecutor,com.sina.weibo.sdk.cmd.AppInstallCmd) -> a
    android.os.Looper access$2(com.sina.weibo.sdk.cmd.AppInstallCmdExecutor) -> a
    void access$3(com.sina.weibo.sdk.cmd.AppInstallCmdExecutor,boolean) -> a
com.sina.weibo.sdk.cmd.AppInstallCmdExecutor$InstallHandler -> com.sina.weibo.sdk.a.c:
    com.sina.weibo.sdk.cmd.AppInstallCmdExecutor this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.sina.weibo.sdk.cmd.AppInvokeCmd -> com.sina.weibo.sdk.a.d:
    java.lang.String appPackage -> a
    java.lang.String scheme -> b
    java.lang.String url -> c
    void initFromJsonObj(org.json.JSONObject) -> a
    java.lang.String getAppPackage() -> a
    java.lang.String getScheme() -> b
    java.lang.String getUrl() -> c
com.sina.weibo.sdk.cmd.AppInvokeCmdExecutor -> com.sina.weibo.sdk.a.e:
    android.content.Context mContext -> a
    com.sina.weibo.sdk.cmd.AppInvokeCmdExecutor$NotificationHandler mHandler -> b
    boolean doExecutor(com.sina.weibo.sdk.cmd.AppInvokeCmd) -> a
    void showNotification(android.content.Context,com.sina.weibo.sdk.cmd.AppInvokeCmd) -> b
    android.app.PendingIntent buildInvokePendingIntent(android.content.Context,com.sina.weibo.sdk.cmd.AppInvokeCmd) -> c
    android.content.Intent buildOpenSchemeIntent(java.lang.String,java.lang.String) -> a
    android.content.Intent buildOpenUrlIntent(java.lang.String) -> a
    android.content.Context access$1(com.sina.weibo.sdk.cmd.AppInvokeCmdExecutor) -> a
    void access$2(android.content.Context,com.sina.weibo.sdk.cmd.AppInvokeCmd) -> a
com.sina.weibo.sdk.cmd.AppInvokeCmdExecutor$NotificationHandler -> com.sina.weibo.sdk.a.f:
    com.sina.weibo.sdk.cmd.AppInvokeCmdExecutor this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.sina.weibo.sdk.cmd.BaseCmd -> com.sina.weibo.sdk.a.g:
    java.lang.String mNotificationText -> a
    java.lang.String mNotificationTitle -> b
    long mNotificationDelay -> c
    void initFromJsonObj(org.json.JSONObject) -> a
    java.lang.String getNotificationText() -> e
    java.lang.String getNotificationTitle() -> f
    long getNotificationDelay() -> g
com.sina.weibo.sdk.cmd.CmdInfo -> com.sina.weibo.sdk.a.h:
    java.lang.String TAG -> a
    java.util.List mInstallCmds -> b
    java.util.List mInvokeCmds -> c
    int frequency -> d
    void initFromJsonStr(java.lang.String) -> a
    java.util.List getInstallCmds() -> a
    java.util.List getInvokeCmds() -> b
    int getFrequency() -> c
com.sina.weibo.sdk.cmd.WbAppActivator -> com.sina.weibo.sdk.a.i:
    java.lang.String TAG -> a
    android.content.Context mContext -> b
    com.sina.weibo.sdk.cmd.WbAppActivator mInstance -> c
    java.lang.String mAppkey -> d
    java.util.concurrent.locks.ReentrantLock mLock -> e
    com.sina.weibo.sdk.cmd.AppInvokeCmdExecutor mInvokeExecutor -> f
    com.sina.weibo.sdk.cmd.AppInstallCmdExecutor mInstallExecutor -> g
    com.sina.weibo.sdk.cmd.WbAppActivator getInstance(android.content.Context,java.lang.String) -> a
    void activateApp() -> a
    java.lang.String requestCmdInfo(android.content.Context,java.lang.String) -> c
    void handleInstallCmd(java.util.List) -> a
    void handleInvokeCmd(java.util.List) -> b
    java.lang.String access$0() -> b
    java.util.concurrent.locks.ReentrantLock access$1(com.sina.weibo.sdk.cmd.WbAppActivator) -> a
    android.content.Context access$2(com.sina.weibo.sdk.cmd.WbAppActivator) -> b
    java.lang.String access$3(com.sina.weibo.sdk.cmd.WbAppActivator) -> c
    java.lang.String access$4(android.content.Context,java.lang.String) -> b
    void access$5(com.sina.weibo.sdk.cmd.WbAppActivator,java.util.List) -> a
    void access$6(com.sina.weibo.sdk.cmd.WbAppActivator,java.util.List) -> b
com.sina.weibo.sdk.cmd.WbAppActivator$1 -> com.sina.weibo.sdk.a.j:
    com.sina.weibo.sdk.cmd.WbAppActivator this$0 -> a
    android.content.SharedPreferences val$sdkSp -> b
    void run() -> run
com.sina.weibo.sdk.cmd.WbAppActivator$FrequencyHelper -> com.sina.weibo.sdk.a.k:
    android.content.SharedPreferences getWeiboSdkSp(android.content.Context) -> a
    long getFrequency(android.content.Context,android.content.SharedPreferences) -> a
    void saveFrequency(android.content.Context,android.content.SharedPreferences,long) -> a
    long getLastTime(android.content.Context,android.content.SharedPreferences) -> b
    void saveLastTime(android.content.Context,android.content.SharedPreferences,long) -> b
com.sina.weibo.sdk.demo.WBDemoMainActivity -> com.sina.weibo.sdk.demo.WBDemoMainActivity:
    com.sina.weibo.sdk.api.share.IWeiboShareAPI mWeiboShareAPI -> a
    void onCreate(android.os.Bundle) -> onCreate
    void share(android.view.View) -> share
    void sendMultiMessageToWeibo() -> a
    com.sina.weibo.sdk.api.TextObject getTextObj() -> b
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> a
com.sina.weibo.sdk.exception.WeiboException -> com.sina.weibo.sdk.b.a:
com.sina.weibo.sdk.exception.WeiboHttpException -> com.sina.weibo.sdk.b.b:
    int mStatusCode -> a
com.sina.weibo.sdk.exception.WeiboShareException -> com.sina.weibo.sdk.b.c:
com.sina.weibo.sdk.net.CustomRedirectHandler -> com.sina.weibo.sdk.net.a:
    java.lang.String TAG -> c
    int redirectCount -> a
    java.lang.String redirectUrl -> b
    java.lang.String tempRedirectUrl -> d
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    boolean shouldRedirectUrl(java.lang.String) -> a
    void onReceivedException() -> a
    java.lang.String getRedirectUrl() -> b
com.sina.weibo.sdk.net.HttpManager -> com.sina.weibo.sdk.net.HttpManager:
    java.lang.String BOUNDARY -> a
    java.lang.String MP_BOUNDARY -> b
    java.lang.String END_MP_BOUNDARY -> c
    org.apache.http.conn.ssl.SSLSocketFactory sSSLSocketFactory -> d
    java.lang.String openUrl(android.content.Context,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> a
    org.apache.http.HttpResponse requestHttpExecute(android.content.Context,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> c
    void setHttpCommonParam(android.content.Context,com.sina.weibo.sdk.net.WeiboParameters) -> a
    void shutdownHttpClient(org.apache.http.client.HttpClient) -> a
    java.lang.String openRedirectUrl4LocationUri(android.content.Context,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> b
    java.lang.String downloadFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    org.apache.http.client.HttpClient getNewHttpClient() -> a
    void buildParams(java.io.OutputStream,com.sina.weibo.sdk.net.WeiboParameters) -> a
    java.lang.String readRsponse(org.apache.http.HttpResponse) -> a
    java.lang.String getBoundry() -> b
    org.apache.http.conn.ssl.SSLSocketFactory getSSLSocketFactory() -> c
    java.security.cert.Certificate getCertificate(java.lang.String) -> a
    java.lang.String getTimestamp() -> d
    java.lang.String getOauthSign(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String calcOauthSignNative(android.content.Context,java.lang.String,java.lang.String) -> calcOauthSignNative
com.sina.weibo.sdk.net.HttpManager$2 -> com.sina.weibo.sdk.net.b:
    boolean shouldRedirectUrl(java.lang.String) -> a
    void onReceivedException() -> a
com.sina.weibo.sdk.net.NetStateManager -> com.sina.weibo.sdk.net.c:
    android.content.Context mContext -> b
    com.sina.weibo.sdk.net.NetStateManager$NetState CUR_NETSTATE -> a
    org.apache.http.HttpHost getAPN() -> a
com.sina.weibo.sdk.net.NetStateManager$NetState -> com.sina.weibo.sdk.net.d:
    com.sina.weibo.sdk.net.NetStateManager$NetState Mobile -> a
    com.sina.weibo.sdk.net.NetStateManager$NetState WIFI -> b
    com.sina.weibo.sdk.net.NetStateManager$NetState NOWAY -> c
    com.sina.weibo.sdk.net.NetStateManager$NetState[] ENUM$VALUES -> d
    com.sina.weibo.sdk.net.NetStateManager$NetState[] values() -> values
    com.sina.weibo.sdk.net.NetStateManager$NetState valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.net.NetUtils -> com.sina.weibo.sdk.net.e:
    java.lang.String internalGetRedirectUri(android.content.Context,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> a
    java.lang.String internalDownloadFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String internalHttpRequest(android.content.Context,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> b
com.sina.weibo.sdk.net.SSLSocketFactoryEx -> com.sina.weibo.sdk.net.f:
    java.lang.String TAG -> b
    javax.net.ssl.SSLContext sslContext -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.sina.weibo.sdk.net.SSLSocketFactoryEx$KeyStoresTrustManagerEX -> com.sina.weibo.sdk.net.g:
    java.util.ArrayList x509TrustManagers -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.sina.weibo.sdk.net.WeiboParameters -> com.sina.weibo.sdk.net.h:
    java.util.LinkedHashMap mParams -> a
    java.lang.String mAppKey -> b
    java.lang.String getAppKey() -> a
    void put(java.lang.String,java.lang.String) -> a
    java.lang.Object get(java.lang.String) -> a
    void remove(java.lang.String) -> b
    java.util.Set keySet() -> b
    java.lang.String encodeUrl() -> c
    boolean hasBinaryData() -> d
com.sina.weibo.sdk.statistic.EventLog -> com.sina.weibo.sdk.c.a:
    java.lang.String mEvent_id -> d
    java.util.Map mExtend -> e
    java.lang.String getEvent_id() -> a
    java.util.Map getExtend() -> b
com.sina.weibo.sdk.statistic.LogBuilder -> com.sina.weibo.sdk.c.b:
    int[] $SWITCH_TABLE$com$sina$weibo$sdk$statistic$LogType -> a
    java.lang.String getPageLogs(java.util.List) -> a
    org.json.JSONObject getLogInfo(com.sina.weibo.sdk.statistic.PageLog) -> a
    org.json.JSONObject addEventData(org.json.JSONObject,com.sina.weibo.sdk.statistic.EventLog) -> a
    int[] $SWITCH_TABLE$com$sina$weibo$sdk$statistic$LogType() -> a
com.sina.weibo.sdk.statistic.LogFileUtil -> com.sina.weibo.sdk.c.c:
    java.lang.String getAppLogPath(java.lang.String) -> a
    java.lang.String getSDPath() -> a
    void writeToFile(java.lang.String,java.lang.String,boolean) -> a
com.sina.weibo.sdk.statistic.LogReport -> com.sina.weibo.sdk.c.d:
    java.lang.String mPackageName -> a
    java.lang.String UPLOADTIME -> b
    java.lang.String mBaseUrl -> c
    java.lang.String getPackageName() -> a
com.sina.weibo.sdk.statistic.LogType -> com.sina.weibo.sdk.c.e:
    com.sina.weibo.sdk.statistic.LogType SESSION_START -> a
    com.sina.weibo.sdk.statistic.LogType SESSION_END -> b
    com.sina.weibo.sdk.statistic.LogType FRAGMENT -> c
    com.sina.weibo.sdk.statistic.LogType EVENT -> d
    com.sina.weibo.sdk.statistic.LogType ACTIVITY -> e
    com.sina.weibo.sdk.statistic.LogType[] ENUM$VALUES -> f
    com.sina.weibo.sdk.statistic.LogType[] values() -> values
    com.sina.weibo.sdk.statistic.LogType valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.statistic.PageLog -> com.sina.weibo.sdk.c.f:
    com.sina.weibo.sdk.statistic.LogType mType -> a
    java.lang.String mPage_id -> b
    long mStart_time -> c
    long mEnd_time -> d
    long mDuration -> e
    java.lang.String FILE_SESSION -> f
    long MIN_ENDTIME -> g
    com.sina.weibo.sdk.statistic.LogType getType() -> c
    void setType(com.sina.weibo.sdk.statistic.LogType) -> a
    java.lang.String getPage_id() -> d
    long getStartTime() -> e
    long getEndTime() -> f
    long getDuration() -> g
com.sina.weibo.sdk.statistic.WBAgent -> com.sina.weibo.sdk.c.g:
    void onEvent(java.lang.Object,java.lang.String,java.util.Map) -> a
com.sina.weibo.sdk.statistic.WBAgentExecutor -> com.sina.weibo.sdk.c.h:
    java.util.concurrent.ExecutorService mExecutor -> a
    long TIMEOUT -> b
    void execute(java.lang.Runnable) -> a
com.sina.weibo.sdk.statistic.WBAgentHandler -> com.sina.weibo.sdk.c.i:
    com.sina.weibo.sdk.statistic.WBAgentHandler mInstance -> a
    java.util.List mActivePages -> b
    java.util.Map mPages -> c
    int MAX_CACHE_SIZE -> d
    com.sina.weibo.sdk.statistic.WBAgentHandler getInstance() -> a
    void onEvent(java.lang.String,java.lang.String,java.util.Map) -> a
    void saveActivePages(java.util.List) -> a
com.sina.weibo.sdk.statistic.WBAgentHandler$2 -> com.sina.weibo.sdk.c.j:
    com.sina.weibo.sdk.statistic.WBAgentHandler this$0 -> a
    java.lang.String val$content -> b
    void run() -> run
com.sina.weibo.sdk.utils.AesEncrypt -> com.sina.weibo.sdk.d.a:
    java.lang.String Decrypt(java.lang.String) -> a
    java.security.Key generateKey(java.lang.String) -> b
    byte[] deBase64(java.lang.String) -> c
com.sina.weibo.sdk.utils.AidTask -> com.sina.weibo.sdk.d.b:
    com.sina.weibo.sdk.utils.AidTask sInstance -> a
    android.content.Context mContext -> b
    java.lang.String mAppKey -> c
    com.sina.weibo.sdk.utils.AidTask$AidInfo mAidInfo -> d
    java.util.concurrent.locks.ReentrantLock mTaskLock -> e
    com.sina.weibo.sdk.utils.AidTask$CallbackHandler mHandler -> f
    com.sina.weibo.sdk.utils.AidTask getInstance(android.content.Context) -> a
    void aidTaskInit(java.lang.String) -> a
    void initAidInfo(java.lang.String) -> c
    com.sina.weibo.sdk.utils.AidTask$AidInfo getAidSync(java.lang.String) -> b
    com.sina.weibo.sdk.utils.AidTask$AidInfo loadAidInfoFromCache() -> a
    java.io.File getAidInfoFile(int) -> a
    java.lang.String loadAidFromNet() -> b
    void cacheAidInfo(java.lang.String) -> d
    java.lang.String getMfp(android.content.Context) -> b
    java.lang.String genMfpString(android.content.Context) -> c
    java.lang.String encryptRsa(java.lang.String,java.lang.String) -> a
    int splite(byte[],int,int) -> a
    java.security.PublicKey getPublicKey(java.lang.String) -> e
    java.lang.String getOS() -> c
    java.lang.String getImei(android.content.Context) -> d
    java.lang.String getMeid(android.content.Context) -> e
    java.lang.String getImsi(android.content.Context) -> f
    java.lang.String getMac(android.content.Context) -> g
    java.lang.String getIccid(android.content.Context) -> h
    java.lang.String getSerialNo() -> d
    java.lang.String getAndroidId(android.content.Context) -> i
    java.lang.String getCpu() -> e
    java.lang.String getModel() -> f
    java.lang.String getSdSize() -> g
    java.lang.String getResolution(android.content.Context) -> j
    java.lang.String getSsid(android.content.Context) -> k
    java.lang.String getDeviceName() -> h
    java.lang.String getConnectType(android.content.Context) -> l
    java.io.File access$0(com.sina.weibo.sdk.utils.AidTask,int) -> a
    java.util.concurrent.locks.ReentrantLock access$1(com.sina.weibo.sdk.utils.AidTask) -> a
    com.sina.weibo.sdk.utils.AidTask$AidInfo access$2(com.sina.weibo.sdk.utils.AidTask) -> b
    java.lang.String access$3(com.sina.weibo.sdk.utils.AidTask) -> c
    void access$4(com.sina.weibo.sdk.utils.AidTask,java.lang.String) -> a
    void access$5(com.sina.weibo.sdk.utils.AidTask,com.sina.weibo.sdk.utils.AidTask$AidInfo) -> a
com.sina.weibo.sdk.utils.AidTask$1 -> com.sina.weibo.sdk.d.c:
    com.sina.weibo.sdk.utils.AidTask this$0 -> a
    void run() -> run
com.sina.weibo.sdk.utils.AidTask$2 -> com.sina.weibo.sdk.d.d:
    com.sina.weibo.sdk.utils.AidTask this$0 -> a
    void run() -> run
com.sina.weibo.sdk.utils.AidTask$AidInfo -> com.sina.weibo.sdk.d.e:
    java.lang.String mAid -> a
    java.lang.String mSubCookie -> b
    java.lang.String getAid() -> a
    com.sina.weibo.sdk.utils.AidTask$AidInfo parseJson(java.lang.String) -> a
    com.sina.weibo.sdk.utils.AidTask$AidInfo cloneAidInfo() -> b
com.sina.weibo.sdk.utils.AidTask$AidResultCallBack -> com.sina.weibo.sdk.d.f:
    void onAidGenSuccessed(com.sina.weibo.sdk.utils.AidTask$AidInfo) -> a
    void onAidGenFailed(java.lang.Exception) -> a
com.sina.weibo.sdk.utils.AidTask$CallbackHandler -> com.sina.weibo.sdk.d.g:
    java.lang.ref.WeakReference callBackReference -> a
    void handleMessage(android.os.Message) -> handleMessage
com.sina.weibo.sdk.utils.Base64 -> com.sina.weibo.sdk.d.h:
    char[] alphabet -> a
    byte[] codes -> b
    byte[] decode(byte[]) -> a
    byte[] encodebyte(byte[]) -> b
com.sina.weibo.sdk.utils.LogUtil -> com.sina.weibo.sdk.d.i:
    boolean sIsLogEnable -> a
    void d(java.lang.String,java.lang.String) -> a
    void i(java.lang.String,java.lang.String) -> b
    void e(java.lang.String,java.lang.String) -> c
    void w(java.lang.String,java.lang.String) -> d
    void v(java.lang.String,java.lang.String) -> e
com.sina.weibo.sdk.utils.MD5 -> com.sina.weibo.sdk.d.j:
    char[] hexDigits -> a
    java.lang.String hexdigest(java.lang.String) -> a
    java.lang.String hexdigest(byte[]) -> a
com.sina.weibo.sdk.utils.NetworkHelper -> com.sina.weibo.sdk.d.k:
    boolean isWifiValid(android.content.Context) -> a
    android.net.NetworkInfo getActiveNetworkInfo(android.content.Context) -> b
    java.lang.String generateUA(android.content.Context) -> c
com.sina.weibo.sdk.utils.ResourceManager -> com.sina.weibo.sdk.d.l:
    java.lang.String TAG -> a
    java.lang.String[] PRE_INSTALL_DRAWBLE_PATHS -> b
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,java.lang.String) -> a
    java.util.Locale getLanguage() -> a
    java.lang.String getAppropriatePathOfDrawable(android.content.Context,java.lang.String) -> b
    android.graphics.drawable.Drawable getDrawableFromAssert(android.content.Context,java.lang.String,boolean) -> a
    boolean isFileExisted(android.content.Context,java.lang.String) -> c
    java.lang.String getCurrentDpiFolder(android.content.Context) -> a
com.sina.weibo.sdk.utils.SDKNotification -> com.sina.weibo.sdk.d.m:
    android.content.Context mContext -> a
    android.app.Notification mNotification -> b
    void show(int) -> a
com.sina.weibo.sdk.utils.SDKNotification$SDKNotificationBuilder -> com.sina.weibo.sdk.d.n:
    java.lang.String mTickerText -> a
    java.lang.String mNotificationTitle -> b
    java.lang.String mNotificationContent -> c
    android.app.PendingIntent mNotificationPendingIntent -> d
    long[] mVibrate -> e
    android.net.Uri mSoundUri -> f
    com.sina.weibo.sdk.utils.SDKNotification$SDKNotificationBuilder buildUpon() -> a
    com.sina.weibo.sdk.utils.SDKNotification$SDKNotificationBuilder setTickerText(java.lang.String) -> a
    com.sina.weibo.sdk.utils.SDKNotification$SDKNotificationBuilder setNotificationTitle(java.lang.String) -> b
    com.sina.weibo.sdk.utils.SDKNotification$SDKNotificationBuilder setNotificationContent(java.lang.String) -> c
    com.sina.weibo.sdk.utils.SDKNotification$SDKNotificationBuilder setNotificationPendingIntent(android.app.PendingIntent) -> a
    com.sina.weibo.sdk.utils.SDKNotification build(android.content.Context) -> a
    int getNotificationIcon(android.content.Context) -> b
    int getResourceId(android.content.Context,java.lang.String,java.lang.String) -> a
com.sina.weibo.sdk.utils.Utility -> com.sina.weibo.sdk.d.o:
    boolean isChineseLocale(android.content.Context) -> a
    java.lang.String getSign(android.content.Context,java.lang.String) -> a
    java.lang.String getAid(android.content.Context,java.lang.String) -> b
    java.lang.String generateUAAid(android.content.Context) -> b
